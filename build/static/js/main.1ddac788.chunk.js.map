{"version":3,"sources":["Components/Forms/AddEditForm.js","Components/Modals/Modal.js","Components/Tables/DataTable.js","App.js","serviceWorker.js","index.js"],"names":["AddEditForm","state","id","first","last","email","phone","location","onChange","e","setState","target","name","value","submitFormAdd","preventDefault","fetch","method","headers","body","JSON","stringify","password","then","response","json","item","Array","isArray","props","addItemToState","toggle","console","log","catch","err","submitFormEdit","_id","updateState","this","Form","onSubmit","FormGroup","Label","for","Input","type","placeholder","Button","React","Component","ModalForm","prevState","modal","closeBtn","className","onClick","label","buttonLabel","button","title","color","style","float","marginRight","Modal","isOpen","ModalHeader","close","ModalBody","DataTable","deleteItem","window","confirm","deleteItemFromState","items","map","key","scope","width","Table","responsive","hover","App","itemIndex","findIndex","data","newArray","slice","updatedItems","filter","getItems","Container","Row","Col","margin","filename","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.1ddac788.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nclass AddEditForm extends React.Component {\n  state = {\n    id: 0,\n    first: '',\n    last: '',\n    email: '',\n    phone: '',\n    location: '',\n  };\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  submitFormAdd = (e) => {\n    e.preventDefault();\n    fetch('http://ec2-13-232-33-53.ap-south-1.compute.amazonaws.com:3001/api/user', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        first: this.state.first,\n        last: this.state.last,\n        email: this.state.email,\n        password: this.state.password,\n        phone: this.state.phone,\n        location: this.state.location,\n      }),\n    })\n      .then((response) => response.json())\n      .then((item) => {\n        if (Array.isArray(item)) {\n          this.props.addItemToState(item[0]);\n          this.props.toggle();\n        } else {\n          console.log('failure');\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  submitFormEdit = (e) => {\n    e.preventDefault();\n    console.log(this.state.id);\n    fetch(`http://ec2-13-232-33-53.ap-south-1.compute.amazonaws.com:3001/api/user/${this.state._id}`, {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        _id: this.state._id,\n        first: this.state.first,\n        last: this.state.last,\n        email: this.state.email,\n        password: this.state.password,\n        phone: this.state.phone,\n        location: this.state.location,\n      }),\n    })\n      .then((response) => response.json())\n      .then((item) => {\n        if (Array.isArray(item)) {\n          // console.log(item[0])\n          this.props.updateState(item[0]);\n          this.props.toggle();\n        } else {\n          console.log('failure');\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  componentDidMount() {\n    // if item exists, populate the state with proper data\n    if (this.props.item) {\n      const {\n        _id,\n        first,\n        last,\n        email,\n        password,\n        phone,\n        location,\n      } = this.props.item;\n      this.setState({ _id, first, last, email, password, phone, location });\n    }\n  }\n\n  render() {\n    return (\n      <Form\n        onSubmit={this.props.item ? this.submitFormEdit : this.submitFormAdd}\n      >\n        <FormGroup>\n          <Label for=\"first\">First Name</Label>\n          <Input\n            type=\"text\"\n            name=\"first\"\n            id=\"first\"\n            onChange={this.onChange}\n            value={this.state.first === null ? '' : this.state.first}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"last\">Last Name</Label>\n          <Input\n            type=\"text\"\n            name=\"last\"\n            id=\"last\"\n            onChange={this.onChange}\n            value={this.state.last === null ? '' : this.state.last}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"email\">Email</Label>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            onChange={this.onChange}\n            value={this.state.email === null ? '' : this.state.email}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"password\">Password</Label>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            onChange={this.onChange}\n            value={this.state.password === null ? '' : this.state.password}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"phone\">Phone</Label>\n          <Input\n            type=\"text\"\n            name=\"phone\"\n            id=\"phone\"\n            onChange={this.onChange}\n            value={this.state.phone === null ? '' : this.state.phone}\n            placeholder=\"ex. 555-555-5555\"\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"location\">Location</Label>\n          <Input\n            type=\"text\"\n            name=\"location\"\n            id=\"location\"\n            onChange={this.onChange}\n            value={this.state.location === null ? '' : this.state.location}\n            placeholder=\"City, State\"\n          />\n        </FormGroup>\n        <Button>Submit</Button>\n      </Form>\n    );\n  }\n}\n\nexport default AddEditForm;\n","import React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport AddEditForm from '../Forms/AddEditForm';\n\nclass ModalForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n    };\n  }\n\n  toggle = () => {\n    this.setState((prevState) => ({\n      modal: !prevState.modal,\n    }));\n  };\n\n  render() {\n    const closeBtn = (\n      <button className=\"close\" onClick={this.toggle}>\n        &times;\n      </button>\n    );\n\n    const label = this.props.buttonLabel;\n\n    let button = '';\n    let title = '';\n\n    if (label === 'Edit') {\n      button = (\n        <Button\n          color=\"warning\"\n          onClick={this.toggle}\n          style={{ float: 'left', marginRight: '10px' }}\n        >\n          {label}\n        </Button>\n      );\n      title = 'Edit Item';\n    } else {\n      button = (\n        <Button\n          color=\"success\"\n          onClick={this.toggle}\n          style={{ float: 'left', marginRight: '10px' }}\n        >\n          {label}\n        </Button>\n      );\n      title = 'Add New Item';\n    }\n\n    return (\n      <div>\n        {button}\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.toggle} close={closeBtn}>\n            {title}\n          </ModalHeader>\n          <ModalBody>\n            <AddEditForm\n              addItemToState={this.props.addItemToState}\n              updateState={this.props.updateState}\n              toggle={this.toggle}\n              item={this.props.item}\n            />\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ModalForm;\n","import React, { Component } from 'react';\nimport { Table, Button } from 'reactstrap';\nimport ModalForm from '../Modals/Modal';\n\nclass DataTable extends Component {\n  deleteItem = (id) => {\n    let confirmDelete = window.confirm('Delete item forever?');\n    if (confirmDelete) {\n      fetch(\n        `http://ec2-13-232-33-53.ap-south-1.compute.amazonaws.com:3001/api/user/${id}`,\n        {\n          method: 'delete',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            id,\n          }),\n        }\n      )\n        .then((response) => response.json())\n        .then((item) => {\n          this.props.deleteItemFromState(id);\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  render() {\n    const items = this.props.items.map((item) => {\n      return (\n        <tr key={item._id}>\n          <th scope=\"row\">{item._id}</th>\n          <td>{item.first}</td>\n          <td>{item.last}</td>\n          <td>{item.email}</td>\n          <td>{item.phone}</td>\n          <td>{item.location}</td>\n          <td>\n            <div style={{ width: '110px' }}>\n              <ModalForm\n                buttonLabel=\"Edit\"\n                item={item}\n                updateState={this.props.updateState}\n              />{' '}\n              <Button color=\"danger\" onClick={() => this.deleteItem(item._id)}>\n                Del\n              </Button>\n            </div>\n          </td>\n        </tr>\n      );\n    });\n\n    return (\n      <Table responsive hover>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>First</th>\n            <th>Last</th>\n            <th>Email</th>\n            <th>Phone</th>\n            <th>Location</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>{items}</tbody>\n      </Table>\n    );\n  }\n}\n\nexport default DataTable;\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport ModalForm from './Components/Modals/Modal';\nimport DataTable from './Components/Tables/DataTable';\nimport { CSVLink } from 'react-csv';\n\nclass App extends Component {\n  state = {\n    items: [],\n  };\n\n  getItems() {\n    console.log('fetch');\n    fetch(\n      'http://ec2-13-232-33-53.ap-south-1.compute.amazonaws.com:3001/api/users'\n    )\n      .then((response) => response.json())\n      .then((items) => this.setState({ items }))\n      .catch((err) => console.log(err));\n  }\n\n  addItemToState = (item) => {\n    this.setState((prevState) => ({\n      items: [...prevState.items, item],\n    }));\n  };\n\n  updateState = (item) => {\n    const itemIndex = this.state.items.findIndex(\n      (data) => data._id === item._id\n    );\n    const newArray = [\n      // destructure all items from beginning to the indexed item\n      ...this.state.items.slice(0, itemIndex),\n      // add the updated item to the array\n      item,\n      // add the rest of the items to the array from the index after the replaced item\n      ...this.state.items.slice(itemIndex + 1),\n    ];\n    this.setState({ items: newArray });\n  };\n\n  deleteItemFromState = (id) => {\n    const updatedItems = this.state.items.filter((item) => item._id !== id);\n    this.setState({ items: updatedItems });\n  };\n\n  componentDidMount() {\n    this.getItems();\n  }\n\n  render() {\n    return (\n      <Container className=\"App\">\n        <Row>\n          <Col>\n            <h1 style={{ margin: '20px 0' }}>User Directory</h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <DataTable\n              items={this.state.items}\n              updateState={this.updateState}\n              deleteItemFromState={this.deleteItemFromState}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <CSVLink\n              filename={'db.csv'}\n              color=\"primary\"\n              style={{ float: 'left', marginRight: '10px' }}\n              className=\"btn btn-primary\"\n              data={this.state.items}\n            >\n              Download CSV\n            </CSVLink>\n            <ModalForm\n              buttonLabel=\"Add Item\"\n              addItemToState={this.addItemToState}\n            />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n// import React from 'react';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}